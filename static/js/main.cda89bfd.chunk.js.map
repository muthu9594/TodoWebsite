{"version":3,"sources":["components/Header.jsx","components/AddTodo.jsx","components/Todo.jsx","components/EmptyTodo.jsx","components/Todos.jsx","App.js","index.js"],"names":["Header","useColorMode","colorMode","toggleColorMode","display","p","icon","isRound","mr","onClick","bgGradient","bgClip","AddTodo","todos","setTodos","useState","Todo","setTodo","toast","useToast","placeholder","variant","value","onChange","e","target","handleChange","colorScheme","px","title","status","duration","isClosable","newTodo","id","nanoid","text","addTodo","todo","deleteTodo","w","ml","EmptyTodo","bg","color","borderRadius","Todos","borderWidth","length","alignItems","mt","divider","map","App","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","maxW","base","sm","lg","xl","updatedTodo","filter","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"mOAyBeA,EAfA,WACX,MAAkCC,cAA3BC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,gBACjB,OACI,eAAC,IAAD,CAAKC,QAAQ,OAAOC,EAAG,EAAvB,UACI,cAAC,IAAD,CAAYC,KAAoB,UAAdJ,EAAsB,cAAC,IAAD,IAAS,cAAC,IAAD,IAAWK,SAAS,EAAMC,GAAI,EAAGC,QAASN,IAC3F,cAAC,IAAD,CACAO,WAAW,2CACXC,OAAO,OAFP,0B,gCCgCGC,EAvCC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SACpB,EAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAMC,cAsBZ,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CACAC,YAAY,mBACZC,QAAQ,SACRC,MAAON,EACPO,SAAU,SAACC,GAAD,OA1BC,SAACA,GAChBP,EAAQO,EAAEC,OAAOH,OAyBEI,CAAaF,MAE5B,cAAC,IAAD,CAAQG,YAAY,OAAOC,GAAG,IAAInB,QAAS,kBAzBrC,WACNO,GACAE,EAAM,CACFW,MAAM,sBACNC,OAAO,QACPC,SAAS,OACTC,YAAW,IAInB,IAAMC,EAAQ,CACVC,GAAGC,cACHC,KAAKpB,GAETF,EAAS,GAAD,mBAAKD,GAAL,CAAWoB,KACnBhB,EAAQ,IAU2CoB,IAA/C,0BCxBGrB,EATF,SAAC,GAAuB,IAAtBsB,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,WAChB,OACI,eAAC,IAAD,CAAQlC,EAAG,EAAX,UACG,cAAC,IAAD,CAAMmC,EAAE,OAAOC,GAAI,EAAnB,SAAuBH,EAAKF,OAC5B,cAAC,IAAD,CAAY9B,KAAM,cAAC,IAAD,IAAYC,QAAQ,OAAOE,QAAS,kBAAI8B,EAAWD,EAAKJ,WCGtEQ,EAVG,WACd,OAEQ,cAAC,IAAD,CAAMrC,EAAG,EAAIsC,GAAG,UAAUC,MAAM,QAAQC,aAAa,KAArD,uCCgBGC,EAdD,SAAC,GAAwB,IAAvBjC,EAAsB,EAAtBA,MAAM0B,EAAgB,EAAhBA,WAElB,OACI,cAAC,IAAD,CAAQQ,YAAalC,EAAMmC,OAAO,EAAG,MAAM,OAAQC,WAAW,UAAUC,GAAI,EAAGC,QAAS,cAAC,IAAD,IAAxF,SAEItC,EAAMmC,OAAS,EAAGnC,EAAMuC,KAAI,SAAAd,GAAI,OAC5B,cAAC,EAAD,CAAMA,KAAMA,EAAMC,WAAYA,OAC9B,cAAC,EAAD,OCoBDc,MAxBf,WACE,MAAuBtC,oBAAS,kBAAIuC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAAjF,mBAAO5C,EAAP,KAAaC,EAAb,KAYA,OAVA4C,qBAAU,WACRF,aAAaG,QAAQ,QAAQL,KAAKM,UAAU/C,MAC5C,CAACA,IASD,eAAC,IAAD,WACE,cAAC,EAAD,IACC,eAAC,IAAD,CAAK2B,EAAE,OAAOqB,KAAM,CAACC,KAAK,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,QAAxD,cACC,cAAC,EAAD,CAASpD,MAAOA,EAAOC,SAAUA,IACjC,cAAC,EAAD,CAAOD,MAAOA,EAAO0B,WAXV,SAACL,GAChB,IAAMgC,EAAYrD,EAAMsD,QAAO,SAAA7B,GAAI,OAAEA,EAAKJ,KAAOA,KACjDpB,EAASoD,a,QCZbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,iBACE,cAAC,IAAD,CAAiBC,iBAAiB,UAClC,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.cda89bfd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//chakra\r\nimport { Box,Heading,IconButton,useColorMode } from '@chakra-ui/react'\r\n\r\n//react icons\r\nimport {FaSun,FaMoon}from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const {colorMode,toggleColorMode}=useColorMode();\r\n    return (\r\n        <Box display='flex' p={6}>\r\n            <IconButton icon={colorMode === 'light'?<FaSun/>:<FaMoon/>} isRound={true} mr={5} onClick={toggleColorMode}/>\r\n            <Heading\r\n            bgGradient=\"linear(to-l,red.500,yellow.200,pink.500)\" //it will apply color to background\r\n            bgClip='text'                //it will apply color to text\r\n            >\r\n                Todo App \r\n            </Heading>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useState} from 'react'\r\n\r\n\r\n//chakra\r\nimport { HStack,Input,Button,useToast} from '@chakra-ui/react'\r\n\r\nimport {nanoid} from 'nanoid';\r\n\r\nconst AddTodo = ({todos,setTodos}) => {\r\n    const [Todo,setTodo]=useState('');\r\n    const toast=useToast();\r\n\r\n    const handleChange=(e)=>{\r\n        setTodo(e.target.value); \r\n    }\r\n    const addTodo=()=>{\r\n        if(!Todo){\r\n            toast({\r\n                title:'NO Todo Item to Add',\r\n                status:'error',\r\n                duration:'3000',\r\n                isClosable:true\r\n\r\n            })\r\n        };\r\n        const newTodo={\r\n            id:nanoid(),\r\n            text:Todo\r\n        }\r\n        setTodos([...todos,newTodo])\r\n        setTodo('')\r\n    }\r\n    return (\r\n        <HStack>\r\n            <Input\r\n            placeholder='Add Todo item...'\r\n            variant='filled'\r\n            value={Todo}\r\n            onChange={(e)=>handleChange(e)}\r\n            />\r\n            <Button colorScheme='blue' px=\"8\" onClick={()=>addTodo()}>\r\n                Add Todo\r\n            </Button>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nimport { HStack,Text,IconButton } from '@chakra-ui/react'\r\n\r\n//reactIcons\r\nimport { FaTrash } from 'react-icons/fa'\r\n\r\nconst Todo = ({todo,deleteTodo}) => {\r\n    return (\r\n        <HStack p={2}>\r\n           <Text w='100%' ml={4}>{todo.text}</Text>\r\n           <IconButton icon={<FaTrash/>} isRound=\"true\" onClick={()=>deleteTodo(todo.id)}></IconButton>\r\n        </HStack>\r\n    )\r\n} \r\n\r\nexport default Todo\r\n","import React from 'react'\r\n\r\nimport { Text } from '@chakra-ui/react'\r\n\r\nconst EmptyTodo = () => {\r\n    return (\r\n      \r\n            <Text p={5}  bg='red.400' color='white' borderRadius='10'>\r\n                No Todo Items to Display \r\n            </Text>\r\n       \r\n    )\r\n}\r\n\r\nexport default EmptyTodo\r\n","import React from 'react'\r\n\r\n//chakra\r\nimport { VStack,StackDivider } from '@chakra-ui/react'\r\n\r\n//compomnents\r\nimport Todo from './Todo'\r\nimport EmptyTodo from './EmptyTodo'\r\n\r\nconst Todos = ({todos,deleteTodo}) => {\r\n    \r\n    return (\r\n        <VStack borderWidth={todos.length>0 ?'1px':'none'} alignItems='stretch' mt={8} divider={<StackDivider/>}>\r\n            {\r\n            todos.length > 0 ?todos.map(todo=>(\r\n                <Todo todo={todo} deleteTodo={deleteTodo}/>\r\n            )): <EmptyTodo/>\r\n\r\n            }\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","//importing chakra\nimport { VStack,Box } from '@chakra-ui/react';\n\nimport { useState,useEffect } from 'react';\n\n//components\nimport Header from './components/Header';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\n\n\n\nfunction App() {\n  const [todos,setTodos]=useState(()=>JSON.parse(localStorage.getItem('todos')) || []);\n\n  useEffect(()=>{\n    localStorage.setItem('todos',JSON.stringify(todos))\n  },[todos])\n\n  const deleteTodo=(id)=>{\n    const updatedTodo=todos.filter(todo=>todo.id !== id);\n    setTodos(updatedTodo);\n\n  }\n\n  return (\n    <VStack>\n      <Header/>\n       <Box w='100%' maxW={{base:'80vw',sm:'80vw',lg:'50vw',xl:'40vw'}}> {/*For making responsive*/}\n        <AddTodo todos={todos} setTodos={setTodos}/>\n        <Todos todos={todos} deleteTodo={deleteTodo}/>\n      </Box>\n    </VStack>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n//using chakra in app\nimport {ChakraProvider,ColorModeScript} from '@chakra-ui/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>   {/*wrapping with chakra provider to enable chakra ui in full app*/}\n      <ColorModeScript initialColorMode='light'/>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}